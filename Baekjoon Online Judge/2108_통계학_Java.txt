import java.io.*;
import java.util.*;

public class Main {
	public static void main(String[] args) throws IOException {
			BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
			int n = Integer.parseInt(br.readLine());
			
			int[] array = new int[n];	
			int[] counting = new int[8001];
			int[] result = new int[n];
			
			// 과정1 원본 입력값을 array 배열에 저장
			for(int i = 0; i < n; i++) {
				array[i] = Integer.parseInt(br.readLine());
			}
			
			// 과정2 counting 배열에 숫자 개수 넣어주기
			for(int i = 0; i < n; i++) {
				counting[array[i]+4000]++;
			}
			
			// 과정2-1 최빈값 구하기 (중복 시 두번째 최빈값)
			int max_count = 0;
			for(int i = 0; i < 8001; i++) {
				if(max_count < counting[i]) {
					max_count = counting[i];
				}
			}
			
			int mode = 0;
			boolean flag = false;
			
			for(int i = 0; i < 8001; i++) {
				if(max_count == counting[i]) {
					if(flag == false) {
						flag = true;
						mode = i - 4000;
					}
					else {
						mode = i - 4000;
						break;
					}
				}
			}			
			
			// 과정3 누적합 만들기
			int temp = 0;
			
			for(int i = 0; i < 8001; i++) {
				if(counting[i] != 0) {
					counting[i] += temp;
					temp = counting[i];
				}
			}
			
			// 과정4 result 배열에 숫자 순서대로 넣기
			for(int i = n - 1; i >= 0; i--) {
				counting[array[i]+4000]--;
				result[counting[array[i]+4000]] = array[i];
			}
			
			/* 산술평균 */
			int sum = 0;
			for(int i = 0; i < n; i++) {
				sum += result[i];
			}
			System.out.println((int)Math.round((double)sum / n));
			
			/* 중앙값 */
			int median = n / 2;
			System.out.println(result[median]);
			
			/* 최빈값 */
			System.out.println(mode);
			
			/* 범위 */
			System.out.println(result[n-1] - result[0]);
	}
}